name: Deploy on Prod

on:
  push:
    branches:
      - main

jobs:
  deploy:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers php
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-php
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Cache Docker layers nginx
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-nginx
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build php
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          load: true
          tags: dakhtara/php:latest
          file: ./etc/docker/php/Dockerfile
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache-php
          cache-to: type=local,dest=/tmp/.buildx-cache-php-new

      - name: Build Nginx
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          load: true
          tags: dakhtara/nginx:latest
          file: ./etc/docker/nginx/Dockerfile
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache-nginx
          cache-to: type=local,dest=/tmp/.buildx-cache-nginx-new

      - name: Start containers
        run: docker compose -f "docker-compose.yml" up -d --no-build

      - name: Validate composer.json and composer.lock
        run: docker compose exec php composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ./vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: docker compose exec php composer install --prefer-dist --no-progress

      - name: Configure Test config and JWT KeyPair
        run: docker compose exec php make configure-test

      - name: PHPUnit
        run: docker compose exec php make test-full

      ## Once test are passed we can serve files to server

      - name: Stop containers
        if: always()
        run: docker compose -f "docker-compose.yml" down

      - name: Move cache php
        run: |
          rm -rf /tmp/.buildx-cache-php
          mv /tmp/.buildx-cache-php-new /tmp/.buildx-cache-php
      - name: Move cache nginx
        run: |
          rm -rf /tmp/.buildx-cache-nginx
          mv /tmp/.buildx-cache-nginx-new /tmp/.buildx-cache-nginx
